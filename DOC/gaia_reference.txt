	GAIA INTERFACE REFERENCE

		ALGORITHM

			move move_prev move_next inverse swap

			minimize maximize cmp cmp2-4 copy set abs saturate clamp floor ceil

			memcpy memset memcmp

			equal find findp rfind rfindp finds rfinds 
			bsearch ssearch search 
			lower_bound upper_bound 
			index count lower_equal_count upper_equal_count lower_count upper_count

			qsort bsort esort sort issorted

			tolower toupper islower isupper isexistlower isexistupper isalllower isallupper
			isdigit isalpha ispunctuation isspecial
			strlen strcpy strcat strcmp stricmp strstr stristr strend strmch strimch strwrd striwrd
			stremp strdrop stridrop strdropr stridropr
			int2str real2str str2int str2real

			unique_order unique_noorder

		CONTAINER

			Pair<>
			Ref<>
			Ptr<>
			BasicStackBitset<>(clear capacity exist set reset inverse = += -= == != ~ [])
			BasicBitset<>(empty size capacity resize reverse clear destroy exist set reset inverse += -= == != ~ [])
			BasicArray<>(empty size clear resize reset count sort unique unique_noorder erase push/pop_back [] = << >>)
			BasicVector<>iterator(empty size capacity resize reserve destroy insert erase push/pop_back sort find unique unique_noorder [] =)
			BasicList<>iterator(empty size capacity clear destroy resize reserve insert erase swap push/pop_front push/pop_back)
			BasicQueue<>(empty size capacity clear destroy resize reserve push pop = [])
			BasicStackStack<>(empty size resize clear count push pop top = [])
			BasicStack<>(empty size capacity resize reserve count push pop top = [])
			BasicTree<>(empty size capacity clear destroy root insert erase link unlink islinked parent getlinksize getlink leaf find path)
			BasicAVLTree<>iterator(empty size capacity clear destroy insert erase find lower/upper_bound minimize maximize front/back/const_front/const_back_it)
			BasicTrieTree<>iterator(empty size capacity clear destroy insert erase find exist leaf root parent lower/upper_bound count catagory_count full_count front/back/const_front/const_back_it)
			BasicMultiAVLTree<>iterator(empty size capacity clear destroy insert erase find)
			BasicMap<>iterator(empty size capacity clear destroy erase [] =)
			BasicMultiMap<>(empty size capacity clear destroy insert erase find =)
			BasicSet<>iterator(empty size capacity clear destroy insert erase find =)
			BasicMultiSet<>(empty size capacity clear destroy insert erase count find =)
			BasicGraph<>iterator(empty size capacity clear destroy resize reverse root insert erase link unlink islinked getlinksize getlink exist count find path anypath navpath)
			BasicChars<>(empty size capacity resize clear inverse insert erase find rfind left right mid trim_left/right/mid tolower/upper isexistlower/upper isalllower/upper = += == != >= <= > < [])
			BasicString<>(empty size capacity resize reverse clear destroy inverse insert erase find rfind replace left right mid trim_left/right/mid tolower/upper isexistlower/upper isalllower/upper = += == != >= <= > < [])

		FILE

			File(Open Close IsOpen Size Read Write Seek Tell << >> WriteText)
			Directory(GetWorkingDirectory GetBinaryDirectory Create Remove RemoveFile Copy Move Collect)

		SYNC
			sleep usleep
			Lock(Lock Unlock) AutoLock Event(Fire Wait)
			Atomic(Increase Decrease)

		THREAD

			Thread(Run Wait WorkProcedule)

		TIME

			clock_time

		PROCESS

		NETWORK
			IP(Invalid IsInvalid FromString ToString = == != >= <= > <)
			Addr(Invalid IsInvalid FromString ToString = == != >= <= > <)
			GetHostName/GetHostIPList
			Handle : From(RefObject), CallBack(Disconnect), (Connect Disconnect IsConnected Set/GetSelfAddress GetRemoteAddress IsStabilityLink Set/GetSender Set/GetReceiver Send == != >= <= > <)
			Listener : From(Thread), CallBack(Accept), (Set/GetDesc Begin End IsBegin)
			Receiver : From(Thread), CallBack(Receive), (Begin End IsBegin)
			Sender : From(Thread), (Begin End IsBegin)

		RENDER

		SOUND


